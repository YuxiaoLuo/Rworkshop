source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
?dist2gc
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line(line2=c(44.5,86))
PlotDist2Line(line2=c(44.5,82.7))
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
PlotDist2Line(line2=c(44.5,82.7))
PlotDist2Line(pnt=c(0,84))
head(circle1)
head(circle)
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line(pnt=c(0,84))
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line(pnt=c(0,84),verbose=-1)
range(circle1[,1])
range(circle1[,1])*c(0.9,1.1)
range(circle1[,2])
range(circle1[,2])*c(0.9,1.1)
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line(pnt=c(0,84))
setwd("C:/Users/loecherm/Dropbox/Personal/Financial/AmazonCreditCard")
yr = 2016
ff = list.files(as.character(yr), "*.csv", full.names=TRUE)
ff
f=ff[[1]]
f
x=list()
x[[f]] <- read.csv(f, sep=';',encoding="UTF-8",skip=3)
View(x[[f]])
x[[f]] <- read.csv(f, sep=';',encoding="UTF-8",skip=3,head=TRUE)
View(x[[f]])
x[[f]] <- read.csv(f, sep=';',encoding="UTF-8",skip=2,head=TRUE)
View(x[[f]])
f
?readLines
x=list()
for (f in ff){
x[[f]] <- read.csv(f, sep=';',encoding="UTF-8",skip=0)
}
x=do.call("rbind",x)
View(x)
class(x[,2])
tmp=as.Date(as.character(x[,2]))
head(tmp)
head(as.character(x[,2])
)
tmp=as.Date(as.character(x[,2]),format="%d.%m.%y")
head(tmp)
tmp=as.Date(as.character(x[,2]),format="%d.%m.%Y")
head(tmp)
for (i in c(2:3)) x[,i]=as.Date(as.character(x[,i]),format="%d.%m.%Y")
x=x[order(x[,2]),]
View(x)
par("usr")
?curve
par(fig=(c(50, 70, 70, 80)), new = T)
par(fig=c(50, 70, 70, 80), new = T)
?par
par(fig=c(50, 69, 70, 80), new = T)
locator(2)
curve(function(x) distHaversine(c(0,84),c(44.5,x)),84,86,col="purple",lwd=2)
dH=function(x) distHaversine(c(0,84),c(44.5,x))
curve(dH,84,86,col="purple",lwd=2)
dH(85)
dH(84)
dH(86)
lat2=seq(84,86,length=25);plot(lat2,dH(lat2),col="purple",lwd=2,type="l");grid()
for (l in lat2) cat(l,dH(l),"\n")
dH(lat2)
d=vector();for (i in 1:length(lat2)) d[i]=dH(lat2[i])
plot(lat2,d,col="purple",lwd=2,type="l");grid()
for (i in 1:length(lat2)) d[i]=distHaversine(c(0,84),c(44.5,lat2[i]))#dH(lat2[i])
plot(lat2,d,col="purple",lwd=2,type="l");grid()
lat1_, lat2_, dlon_] :=
1/2 Sin[lat2 - lat1] - Cos[lat1] Sin[lat2] Sin[1/2 (dlon)]^2;
DhavDist = function(lat1, lat2, dlon){
d = 0.5 *sin(lat2 - lat1) - cos(lat1)*sin(lat2)*sin(dlon/2)^2;
return(d)
}
plot(lat2,DhavDist(84,lat2,44.5),col="darkgreen",lwd=2,type="l");
plot(lat2,d,col="purple",lwd=2,type="l");grid()
par(new=T)
plot(lat2,DhavDist(84,lat2,44.5),col="darkgreen",lwd=2,type="l");
plot(lat2,d,col="purple",lwd=2,type="l");grid()
par(new=T)
plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",axes=FALSE);
axis(4)
dev.off()
plot(lat2,d,col="purple",lwd=2,type="l",ylab="geodesic dist");grid()
par(new=T)
plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",axes=FALSE);
axis(4)
dev.off()
plot(lat2,d,col="purple",lwd=2,type="l",ylab="geodesic dist");grid()
par(new=T)
plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
axis(4)
lat2[which.min(d)]
IdiothavDist = function(lat1, lat2, dlon){
d = cos(lat1)*cos(lat2)*sin(dlon/2)^2 + sin((lat2 - lat1)/2)^2;
return(d)
}
plot(lat2,d,col="purple",lwd=2,type="l",ylab="geodesic dist");grid()
lat2[which.min(d)];par(new=T)
plot(lat2,IdiothavDist(84,lat2,44.5),col="red",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
axis(4)
distHaversine
?atan2
sin(pi)
sin(pi/2)
?distHaversine
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
plot(lat2,d,col="purple",lwd=2,type="l",ylab="geodesic dist");grid()
lat2[which.min(d)];par(new=T)
plot(lat2,IdiothavDist(84,lat2,44.5),col="red",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
axis(4)
plot(lat2,d,col="purple",lwd=2,type="l",ylab="geodesic dist");grid()
lat2[which.min(d)];par(new=T)
plot(lat2,IdiothavDist(84,lat2,44.5),col="red",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
axis(4)
curve(asin,0,pi/2)
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
plot(lat2,IdiothavDist(84,lat2,44.5),col="red",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
dev.off()
plot(lat2,d,col="purple",lwd=2,type="l",ylab="geodesic dist");grid()
lat2[which.min(d)];par(new=T)
plot(lat2,IdiothavDist(84,lat2,44.5),col="red",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
axis(4)
par(new=T)
plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
axis(4)
plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
axis(4)
plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",ylab="",xlab="");
grid()
abline(h=0,col=2)
plot(lat2,d,col="purple",lwd=2,type="l",ylab="geodesic dist");grid()
plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
axis(4);abline(h=0,col=2)
plot(lat2,d,col="purple",lwd=2,type="l",ylab="geodesic dist");grid()
lat2[which.min(d)];par(new=T)
plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
axis(4);abline(h=0,col=2)
lat2[which.min(abs(DhavDist(84,lat2,44.5)))]
abline(v=lat2[which.min(abs(DhavDist(84,lat2,44.5)))],col=2,lty=2)
pp= par("usr")
pp
PlotDist2Line(pnt=c(0,84))
pp= par("usr")
pp
par(fig=c(pp[2]-30, pp[2], pp[3], pp[3]+10), new = T)
par(fig=c(0.8,1,0.1,0.2), new = T)
plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
par(fig=c(0.8,1,0.1,0.4), new = T)
plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
par(mar=c(0,0,0,0));plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
par(fig=c(0.7,0.9,0.1,0.4), new = T)
par(mar=c(0,0,0,0));plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
par(fig=c(0.7,0.9,0.1,0.4), new = T)
par(mar=rep(1,4));plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
dev.off()
PlotDist2Line(pnt=c(0,84))
plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",axes=FALSE,ylab="",xlab="");
plot(lat2,DhavDist(84,lat2,44.5),col="green",lwd=2,type="l",ylab="",xlab="");
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line(pnt=c(0,84))
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
PlotDist2Line(line2=c(44.5,82.7))
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
?distHaversine
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
DhavDist(80,lat2b,44.5)
DhavDist(80,82.82946,44.5)
points(44.5,82.83181,col=red,pch=20)
points(44.5,82.83181,col=2,pch=20)
PlotDist2Line(line2=c(44.5,82.7))
PlotDist2Line(pnt=c(0,84))
acos(0.2)
acos(-0.2)
curve(acos,0,1)
curve(acos,-1,1)
grid()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line(pnt=c(0,84))
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line(pnt=c(0,84))
PlotDist2Line()
PlotDist2Line(line2=c(44.5,82.7))
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line(pnt=c(0,84))
?(d[1,2:3],pnt)
?distCosine
?distHaversine
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line(pnt=c(0,84))
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode/mydist2Line.R')
PlotDist2Line()
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/pkg/R/PlotDist2Line.R')
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/pkg/R/PlotDist2Line.R')
?dist2Line
source('C:/Users/loecherm/Dropbox/HWR/RANNgeo/pkg/R/PlotDist2Line.R')
library(RgoogleMaps)
m = GetMap("Austin, Texas", zoom = 3)
getwd()
setwd("C:/Users/loecherm/Dropbox/HWR/RANNgeo/ExtraCode")
save(m,file="m.rda")
dlat= m$BBOX$ur[1,"lat"]-m$BBOX$ll[1,"lat"]
dlon=m$BBOX$ur[1,"lon"]-m$BBOX$ll[1,"lon"]
r = 0.9*min(dlat,dlon)/2
a = seq(0,2*pi,length=360*2)
PlotOnStaticMap(m, lat = m$lat.center + r*cos(a),
lon = m$lon.center + r*sin(a),
col=2, FUN = lines,lwd=2)
save(m,file="m.rda")
PlotOnStaticMap(m, lat = m$lat.center,
lon = m$lon.center,
col="purple", pch="X", add=TRUE)
for (l in seq(m$BBOX$ll[1,"lon"],m$BBOX$ur[1,"lon"],length=10)){
PlotOnStaticMap(m, lat = c(m$BBOX$ll[1,"lat"], m$BBOX$ur[1,"lat"]),
lon = c(l,l), col="lightgray", FUN = lines,lwd=1, add=TRUE)
}
for (l in seq(m$BBOX$ll[1,"lat"],m$BBOX$ur[1,"lat"],length=10)){
PlotOnStaticMap(m, lon = c(m$BBOX$ll[1,"lon"], m$BBOX$ur[1,"lon"]),
lat = c(l,l), col="lightgray", FUN = lines,lwd=1, add=TRUE)
}
for (l in seq(m$BBOX$ll[1,"lon"],m$BBOX$ur[1,"lon"],length=10)){
PlotOnStaticMap(m, lat = c(m$BBOX$ll[1,"lat"], m$BBOX$ur[1,"lat"]),
lon = c(l,l), col="gray", FUN = lines,lwd=1, add=TRUE)
}
for (l in seq(m$BBOX$ll[1,"lat"],m$BBOX$ur[1,"lat"],length=10)){
PlotOnStaticMap(m, lon = c(m$BBOX$ll[1,"lon"], m$BBOX$ur[1,"lon"]),
lat = c(l,l), col="gray", FUN = lines,lwd=1, add=TRUE)
}
m = GetMap("Anchorage, Alaska", zoom = 3)
dlat= m$BBOX$ur[1,"lat"]-m$BBOX$ll[1,"lat"]
dlon=m$BBOX$ur[1,"lon"]-m$BBOX$ll[1,"lon"]
r = 0.9*min(dlat,dlon)/2
a = seq(0,2*pi,length=360*2)
PlotOnStaticMap(m, lat = m$lat.center + r*cos(a),
lon = m$lon.center + r*sin(a),
col=2, FUN = lines,lwd=2)
r = 0.6*min(dlat,dlon)/2
a = seq(0,2*pi,length=360*2)
PlotOnStaticMap(m, lat = m$lat.center + r*cos(a),
lon = m$lon.center + r*sin(a),
col=2, FUN = lines,lwd=2)
PlotOnStaticMap(m, lat = m$lat.center,
lon = m$lon.center,
col="purple", pch="X", add=TRUE)
m = GetMap("Oslo, Norway", zoom = 3)
dlat= m$BBOX$ur[1,"lat"]-m$BBOX$ll[1,"lat"]
dlon=m$BBOX$ur[1,"lon"]-m$BBOX$ll[1,"lon"]
#radius
r = 0.6*min(dlat,dlon)/2
a = seq(0,2*pi,length=360*2)
PlotOnStaticMap(m, lat = m$lat.center + r*cos(a),
lon = m$lon.center + r*sin(a),
col=2, FUN = lines,lwd=2)
circle=destPoint(c(m$lon.center,m$lat.center), b=1:365, d=100000)
PlotOnStaticMap(m, lat = circle[,2], lon = circle[,1],col=2, FUN = lines,lwd=2)
circle=destPoint(c(m$lon.center,m$lat.center), b=1:365, d=1000000)
PlotOnStaticMap(m, lat = circle[,2], lon = circle[,1],col=2, FUN = lines,lwd=2)
circle=destPoint(c(m$lon.center,m$lat.center), b=1:365, d=3000000)
PlotOnStaticMap(m, lat = circle[,2], lon = circle[,1],col=2, FUN = lines,lwd=2)
circle=destPoint(c(m$lon.center,m$lat.center), b=1:365, d=2000000)
PlotOnStaticMap(m, lat = circle[,2], lon = circle[,1],col=2, FUN = lines,lwd=2)
circle=destPoint(c(m$lon.center,m$lat.center), b=1:365, d=2500000)
PlotOnStaticMap(m, lat = circle[,2], lon = circle[,1],col=2, FUN = lines,lwd=2)
getGeoCode("Oslo, Norway")
?devtools:: load_all
library(swirl)
install_from_swirl("R Programming")
30*0.35
?swirl
setwd("H:/DropboxHWR/WS2016/DataScience/swirl")
library(swirlify)
swirlify("Lesson1", "DataScience")
load_packages <- function(x){
for(i in 1:length(x)){
if(!require(x[i], character.only = TRUE)) {
install.packages(x[i], repos="http://cran.us.r-project.org")
require(x[i], character.only = TRUE)
}
}
}
load_packages(c("rpart", "rpart.plot"))
Sys.setlocale("LC_CTYPE", "german")
#dataset <- read.table("../processed/DE_all_CDM_201405050001_DE_all_CDM2014-05-05_rcout.csv", encoding="UTF-8", header=TRUE, sep=";", stringsAsFactors=F, as.is=T)
#dataset <- dataset[,c(1,11,30)]
#Encoding(dataset[,2]) <- "UTF-8"
d_election <- read.csv('wahl-zweitstimmen.tsv', sep='\t',encoding="UTF-8") # Stimmen der Briefwahlbezirke laden
d_socio <- read.csv('wahl-soziodemographisch.tsv', sep='\t',encoding="UTF-8") # Soziodemographische Daten laden
d <- merge(d_election, d_socio, by = "id") # Daten mergen
getwd()
setwd("H:/DropboxHWR/Blog/data/BerlinerWahlen2016")
Sys.setlocale("LC_CTYPE", "german")
#dataset <- read.table("../processed/DE_all_CDM_201405050001_DE_all_CDM2014-05-05_rcout.csv", encoding="UTF-8", header=TRUE, sep=";", stringsAsFactors=F, as.is=T)
#dataset <- dataset[,c(1,11,30)]
#Encoding(dataset[,2]) <- "UTF-8"
d_election <- read.csv('wahl-zweitstimmen.tsv', sep='\t',encoding="UTF-8") # Stimmen der Briefwahlbezirke laden
d_socio <- read.csv('wahl-soziodemographisch.tsv', sep='\t',encoding="UTF-8") # Soziodemographische Daten laden
d <- merge(d_election, d_socio, by = "id") # Daten mergen
View(d)
train <- read.csv("H:/DropboxHWR/WS2016/DataScience/data/kaggle/HousePrices/train.csv")
View(train)
swirl()
swirl()
swirl()
?mode
?install.packages
getwd()
install.packages("ISLR", lib="\\user\home\loecherm\Documents\R\win-library\3.3.1")
setwd("~/")
getwd()
install.packages("ISLR", lib="~/R/win-library/3.3.1")
install.packages("ISLR")
library(ISLR)
summary(College)
View(College)
View(Auto)
boxplot(mpg ~ cylinders,data=Auto)
dev.off()
boxplot(mpg ~ cylinders,data=Auto)
libary(tuneR)
library(tuneR)
getwd()
mpt <- readMP3("PuffTheMagicDragon.mp3")
mpt <- readMP3("PuffTheMagicDragon.mp3")
?file.access
file.access("PuffTheMagicDragon.mp3", 4)
file.access("Vom Loslassen der Kinder.pdf", 4)
file.info("PuffTheMagicDragon.mp3")
Sys.chmod("PuffTheMagicDragon.mp3")
file.info("PuffTheMagicDragon.mp3")
setwd("H:/DropboxHWR/Blog/JianWork")
file.access("PotentialWork.Rmd", 4)
file.info("PotentialWork.Rmd")
setwd("~/")
getwd()
install.packages("swirl")
library(swirl)
install.packages("ISLR", lib="~/R/win-library/3.3")
install.packages("swirl", lib="~/R/win-library/3.3")
install.packages("swirlify", lib="~/R/win-library/3.3")
library(swirl)
library(swirlify)
install.packages("swirlify", lib="~/R/win-library/3.3")
install.packages("swirlify", lib = "~/R/win-library/3.3")
library(swirlify)
getwd()
library(swirl)
?demo_lesson
demo_lesson()
dim(Auto)
mean(Auto$mpg)
hist(Auto$mpg)
demo_lesson()
setwd("H:/DropboxHWR/TeachingMaterials/swirl_courses/BSEL_DataScience/Lesson1")
library(swirlify)
demo_lesson(15)
?group_by
summarise(group_by(Auto, cylinders), mean(mpg), length(mpg))
?sumarise
?summarise
?boxplot
library(ggplot2)
plot(mpg ~ cylinders, data = Auto)
Auto$cylinders[72]
match(T,Auto$cylinders==3)
Auto$cylinders[71]
Auto$mpg[71]
Auto$mpg[71] <- 91
Auto$mpg[1] <- 18
plot(mpg ~ cylinders, data = Auto)
plot(mpg ~ weight, data = Auto)
plot(mpg ~ weight, data = Auto,col = rgb(0,0,1,0.5), pch=20, cex=0.5)
plot(mpg ~ weight, data = Auto,col = rgb(0,0,1,0.5), pch=20)
boxplot(mpg ~ cylinders, data = Auto)
plot(mpg ~ cylinders, data = Auto)
summarise(group_by(Auto, cylinders), mean(mpg), length(mpg))
match(T,Auto$cylinders==6)
[17]
Auto$mpg[17]
data(Auto)
data(ISLR::Auto)
assign("Auto", ISLR::Auto, envir=globalenv())
boxplot(mpg ~ cylinders, data = Auto)
Auto$mpg[17] <- 81
boxplot(mpg ~ cylinders, data = Auto)
bp <- boxplot(mpg ~ cylinders, data = Auto)
bp
?boxplot
bp$stats[4,2]
library(swirlify)
demo_lesson(10)
demo_lesson(10)
Auto$mpg[17] <- 81
hb <- hist(Auto$mpg)
hb
?aggregate
aggregate(mpg ~ cylinders, data = Auto, FUN = mean)
?group_by
summarise(group_by(Auto, cylinders), mean(mpg), length(mpg))
plot(mpg ~ cylinders, data = Auto)
plot(mpg ~ weight, data = Auto,col = rgb(0,0,1,0.5), pch=20)
install.packages("RgoogleMaps", repos="http://R-Forge.R-project.org")
install.packages("RgoogleMaps", repos="http://R-Forge.R-project.org")
library(ggplot2)
ggplot(Auto, aes(x=weight, y=mpg)) + geom_point()
ggplot(Auto, aes(x=weight, y=mpg)) + geom_point(aes(colour=horsepower))
demo_lesson(15)
?group_by
h
summarise()
summarise(group_by(Auto, cylinders), mean(mpg), length(mpg))
plot(mpg ~ cylinders, data = Auto)
plot(mpg ~ weight, data = Auto,col = rgb(0,0,1,0.5), pch=20)
